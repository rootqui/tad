#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PracticaCalificada
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="P2_PC1_TAD_2019II")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertCAB_RECETA(CAB_RECETA instance);
    partial void UpdateCAB_RECETA(CAB_RECETA instance);
    partial void DeleteCAB_RECETA(CAB_RECETA instance);
    partial void InsertDET_RECETA(DET_RECETA instance);
    partial void UpdateDET_RECETA(DET_RECETA instance);
    partial void DeleteDET_RECETA(DET_RECETA instance);
    partial void InsertMEDICO(MEDICO instance);
    partial void UpdateMEDICO(MEDICO instance);
    partial void DeleteMEDICO(MEDICO instance);
    partial void InsertPACIENTE(PACIENTE instance);
    partial void UpdatePACIENTE(PACIENTE instance);
    partial void DeletePACIENTE(PACIENTE instance);
    partial void InsertPRODUCTO(PRODUCTO instance);
    partial void UpdatePRODUCTO(PRODUCTO instance);
    partial void DeletePRODUCTO(PRODUCTO instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::PracticaCalificada.Properties.Settings.Default.P2_PC1_TAD_2019IIConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CAB_RECETA> CAB_RECETA
		{
			get
			{
				return this.GetTable<CAB_RECETA>();
			}
		}
		
		public System.Data.Linq.Table<DET_RECETA> DET_RECETA
		{
			get
			{
				return this.GetTable<DET_RECETA>();
			}
		}
		
		public System.Data.Linq.Table<MEDICO> MEDICO
		{
			get
			{
				return this.GetTable<MEDICO>();
			}
		}
		
		public System.Data.Linq.Table<PACIENTE> PACIENTE
		{
			get
			{
				return this.GetTable<PACIENTE>();
			}
		}
		
		public System.Data.Linq.Table<PRODUCTO> PRODUCTO
		{
			get
			{
				return this.GetTable<PRODUCTO>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CAB_RECETA")]
	public partial class CAB_RECETA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CREC_ID;
		
		private System.DateTime _CREC_FECHA;
		
		private int _MEDI_ID;
		
		private int _PACI_ID;
		
		private EntitySet<DET_RECETA> _DET_RECETA;
		
		private EntityRef<MEDICO> _MEDICO;
		
		private EntityRef<PACIENTE> _PACIENTE;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCREC_IDChanging(int value);
    partial void OnCREC_IDChanged();
    partial void OnCREC_FECHAChanging(System.DateTime value);
    partial void OnCREC_FECHAChanged();
    partial void OnMEDI_IDChanging(int value);
    partial void OnMEDI_IDChanged();
    partial void OnPACI_IDChanging(int value);
    partial void OnPACI_IDChanged();
    #endregion
		
		public CAB_RECETA()
		{
			this._DET_RECETA = new EntitySet<DET_RECETA>(new Action<DET_RECETA>(this.attach_DET_RECETA), new Action<DET_RECETA>(this.detach_DET_RECETA));
			this._MEDICO = default(EntityRef<MEDICO>);
			this._PACIENTE = default(EntityRef<PACIENTE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREC_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CREC_ID
		{
			get
			{
				return this._CREC_ID;
			}
			set
			{
				if ((this._CREC_ID != value))
				{
					this.OnCREC_IDChanging(value);
					this.SendPropertyChanging();
					this._CREC_ID = value;
					this.SendPropertyChanged("CREC_ID");
					this.OnCREC_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREC_FECHA", DbType="Date NOT NULL")]
		public System.DateTime CREC_FECHA
		{
			get
			{
				return this._CREC_FECHA;
			}
			set
			{
				if ((this._CREC_FECHA != value))
				{
					this.OnCREC_FECHAChanging(value);
					this.SendPropertyChanging();
					this._CREC_FECHA = value;
					this.SendPropertyChanged("CREC_FECHA");
					this.OnCREC_FECHAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MEDI_ID", DbType="Int NOT NULL")]
		public int MEDI_ID
		{
			get
			{
				return this._MEDI_ID;
			}
			set
			{
				if ((this._MEDI_ID != value))
				{
					if (this._MEDICO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMEDI_IDChanging(value);
					this.SendPropertyChanging();
					this._MEDI_ID = value;
					this.SendPropertyChanged("MEDI_ID");
					this.OnMEDI_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PACI_ID", DbType="Int NOT NULL")]
		public int PACI_ID
		{
			get
			{
				return this._PACI_ID;
			}
			set
			{
				if ((this._PACI_ID != value))
				{
					if (this._PACIENTE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPACI_IDChanging(value);
					this.SendPropertyChanging();
					this._PACI_ID = value;
					this.SendPropertyChanged("PACI_ID");
					this.OnPACI_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAB_RECETA_DET_RECETA", Storage="_DET_RECETA", ThisKey="CREC_ID", OtherKey="CREC_ID")]
		public EntitySet<DET_RECETA> DET_RECETA
		{
			get
			{
				return this._DET_RECETA;
			}
			set
			{
				this._DET_RECETA.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MEDICO_CAB_RECETA", Storage="_MEDICO", ThisKey="MEDI_ID", OtherKey="MEDI_ID", IsForeignKey=true)]
		public MEDICO MEDICO
		{
			get
			{
				return this._MEDICO.Entity;
			}
			set
			{
				MEDICO previousValue = this._MEDICO.Entity;
				if (((previousValue != value) 
							|| (this._MEDICO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MEDICO.Entity = null;
						previousValue.CAB_RECETA.Remove(this);
					}
					this._MEDICO.Entity = value;
					if ((value != null))
					{
						value.CAB_RECETA.Add(this);
						this._MEDI_ID = value.MEDI_ID;
					}
					else
					{
						this._MEDI_ID = default(int);
					}
					this.SendPropertyChanged("MEDICO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PACIENTE_CAB_RECETA", Storage="_PACIENTE", ThisKey="PACI_ID", OtherKey="PACI_ID", IsForeignKey=true)]
		public PACIENTE PACIENTE
		{
			get
			{
				return this._PACIENTE.Entity;
			}
			set
			{
				PACIENTE previousValue = this._PACIENTE.Entity;
				if (((previousValue != value) 
							|| (this._PACIENTE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PACIENTE.Entity = null;
						previousValue.CAB_RECETA.Remove(this);
					}
					this._PACIENTE.Entity = value;
					if ((value != null))
					{
						value.CAB_RECETA.Add(this);
						this._PACI_ID = value.PACI_ID;
					}
					else
					{
						this._PACI_ID = default(int);
					}
					this.SendPropertyChanged("PACIENTE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DET_RECETA(DET_RECETA entity)
		{
			this.SendPropertyChanging();
			entity.CAB_RECETA = this;
		}
		
		private void detach_DET_RECETA(DET_RECETA entity)
		{
			this.SendPropertyChanging();
			entity.CAB_RECETA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DET_RECETA")]
	public partial class DET_RECETA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CREC_ID;
		
		private int _DREC_ID;
		
		private int _PROD_ID;
		
		private decimal _DREC_CANTIDAD;
		
		private string _DREC_INDICACION;
		
		private EntityRef<CAB_RECETA> _CAB_RECETA;
		
		private EntityRef<PRODUCTO> _PRODUCTO;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCREC_IDChanging(int value);
    partial void OnCREC_IDChanged();
    partial void OnDREC_IDChanging(int value);
    partial void OnDREC_IDChanged();
    partial void OnPROD_IDChanging(int value);
    partial void OnPROD_IDChanged();
    partial void OnDREC_CANTIDADChanging(decimal value);
    partial void OnDREC_CANTIDADChanged();
    partial void OnDREC_INDICACIONChanging(string value);
    partial void OnDREC_INDICACIONChanged();
    #endregion
		
		public DET_RECETA()
		{
			this._CAB_RECETA = default(EntityRef<CAB_RECETA>);
			this._PRODUCTO = default(EntityRef<PRODUCTO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREC_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CREC_ID
		{
			get
			{
				return this._CREC_ID;
			}
			set
			{
				if ((this._CREC_ID != value))
				{
					if (this._CAB_RECETA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCREC_IDChanging(value);
					this.SendPropertyChanging();
					this._CREC_ID = value;
					this.SendPropertyChanged("CREC_ID");
					this.OnCREC_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DREC_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DREC_ID
		{
			get
			{
				return this._DREC_ID;
			}
			set
			{
				if ((this._DREC_ID != value))
				{
					this.OnDREC_IDChanging(value);
					this.SendPropertyChanging();
					this._DREC_ID = value;
					this.SendPropertyChanged("DREC_ID");
					this.OnDREC_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROD_ID", DbType="Int NOT NULL")]
		public int PROD_ID
		{
			get
			{
				return this._PROD_ID;
			}
			set
			{
				if ((this._PROD_ID != value))
				{
					if (this._PRODUCTO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPROD_IDChanging(value);
					this.SendPropertyChanging();
					this._PROD_ID = value;
					this.SendPropertyChanged("PROD_ID");
					this.OnPROD_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DREC_CANTIDAD", DbType="Decimal(18,2) NOT NULL")]
		public decimal DREC_CANTIDAD
		{
			get
			{
				return this._DREC_CANTIDAD;
			}
			set
			{
				if ((this._DREC_CANTIDAD != value))
				{
					this.OnDREC_CANTIDADChanging(value);
					this.SendPropertyChanging();
					this._DREC_CANTIDAD = value;
					this.SendPropertyChanged("DREC_CANTIDAD");
					this.OnDREC_CANTIDADChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DREC_INDICACION", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string DREC_INDICACION
		{
			get
			{
				return this._DREC_INDICACION;
			}
			set
			{
				if ((this._DREC_INDICACION != value))
				{
					this.OnDREC_INDICACIONChanging(value);
					this.SendPropertyChanging();
					this._DREC_INDICACION = value;
					this.SendPropertyChanged("DREC_INDICACION");
					this.OnDREC_INDICACIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAB_RECETA_DET_RECETA", Storage="_CAB_RECETA", ThisKey="CREC_ID", OtherKey="CREC_ID", IsForeignKey=true)]
		public CAB_RECETA CAB_RECETA
		{
			get
			{
				return this._CAB_RECETA.Entity;
			}
			set
			{
				CAB_RECETA previousValue = this._CAB_RECETA.Entity;
				if (((previousValue != value) 
							|| (this._CAB_RECETA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CAB_RECETA.Entity = null;
						previousValue.DET_RECETA.Remove(this);
					}
					this._CAB_RECETA.Entity = value;
					if ((value != null))
					{
						value.DET_RECETA.Add(this);
						this._CREC_ID = value.CREC_ID;
					}
					else
					{
						this._CREC_ID = default(int);
					}
					this.SendPropertyChanged("CAB_RECETA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCTO_DET_RECETA", Storage="_PRODUCTO", ThisKey="PROD_ID", OtherKey="PROD_ID", IsForeignKey=true)]
		public PRODUCTO PRODUCTO
		{
			get
			{
				return this._PRODUCTO.Entity;
			}
			set
			{
				PRODUCTO previousValue = this._PRODUCTO.Entity;
				if (((previousValue != value) 
							|| (this._PRODUCTO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRODUCTO.Entity = null;
						previousValue.DET_RECETA.Remove(this);
					}
					this._PRODUCTO.Entity = value;
					if ((value != null))
					{
						value.DET_RECETA.Add(this);
						this._PROD_ID = value.PROD_ID;
					}
					else
					{
						this._PROD_ID = default(int);
					}
					this.SendPropertyChanged("PRODUCTO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MEDICO")]
	public partial class MEDICO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MEDI_ID;
		
		private string _MEDI_DNI;
		
		private string _MEDI_APE_PATERNO;
		
		private string _MEDI_APE_MATERNO;
		
		private string _MEDI_NOMBRE;
		
		private EntitySet<CAB_RECETA> _CAB_RECETA;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMEDI_IDChanging(int value);
    partial void OnMEDI_IDChanged();
    partial void OnMEDI_DNIChanging(string value);
    partial void OnMEDI_DNIChanged();
    partial void OnMEDI_APE_PATERNOChanging(string value);
    partial void OnMEDI_APE_PATERNOChanged();
    partial void OnMEDI_APE_MATERNOChanging(string value);
    partial void OnMEDI_APE_MATERNOChanged();
    partial void OnMEDI_NOMBREChanging(string value);
    partial void OnMEDI_NOMBREChanged();
    #endregion
		
		public MEDICO()
		{
			this._CAB_RECETA = new EntitySet<CAB_RECETA>(new Action<CAB_RECETA>(this.attach_CAB_RECETA), new Action<CAB_RECETA>(this.detach_CAB_RECETA));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MEDI_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MEDI_ID
		{
			get
			{
				return this._MEDI_ID;
			}
			set
			{
				if ((this._MEDI_ID != value))
				{
					this.OnMEDI_IDChanging(value);
					this.SendPropertyChanging();
					this._MEDI_ID = value;
					this.SendPropertyChanged("MEDI_ID");
					this.OnMEDI_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MEDI_DNI", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MEDI_DNI
		{
			get
			{
				return this._MEDI_DNI;
			}
			set
			{
				if ((this._MEDI_DNI != value))
				{
					this.OnMEDI_DNIChanging(value);
					this.SendPropertyChanging();
					this._MEDI_DNI = value;
					this.SendPropertyChanged("MEDI_DNI");
					this.OnMEDI_DNIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MEDI_APE_PATERNO", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MEDI_APE_PATERNO
		{
			get
			{
				return this._MEDI_APE_PATERNO;
			}
			set
			{
				if ((this._MEDI_APE_PATERNO != value))
				{
					this.OnMEDI_APE_PATERNOChanging(value);
					this.SendPropertyChanging();
					this._MEDI_APE_PATERNO = value;
					this.SendPropertyChanged("MEDI_APE_PATERNO");
					this.OnMEDI_APE_PATERNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MEDI_APE_MATERNO", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MEDI_APE_MATERNO
		{
			get
			{
				return this._MEDI_APE_MATERNO;
			}
			set
			{
				if ((this._MEDI_APE_MATERNO != value))
				{
					this.OnMEDI_APE_MATERNOChanging(value);
					this.SendPropertyChanging();
					this._MEDI_APE_MATERNO = value;
					this.SendPropertyChanged("MEDI_APE_MATERNO");
					this.OnMEDI_APE_MATERNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MEDI_NOMBRE", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MEDI_NOMBRE
		{
			get
			{
				return this._MEDI_NOMBRE;
			}
			set
			{
				if ((this._MEDI_NOMBRE != value))
				{
					this.OnMEDI_NOMBREChanging(value);
					this.SendPropertyChanging();
					this._MEDI_NOMBRE = value;
					this.SendPropertyChanged("MEDI_NOMBRE");
					this.OnMEDI_NOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MEDICO_CAB_RECETA", Storage="_CAB_RECETA", ThisKey="MEDI_ID", OtherKey="MEDI_ID")]
		public EntitySet<CAB_RECETA> CAB_RECETA
		{
			get
			{
				return this._CAB_RECETA;
			}
			set
			{
				this._CAB_RECETA.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CAB_RECETA(CAB_RECETA entity)
		{
			this.SendPropertyChanging();
			entity.MEDICO = this;
		}
		
		private void detach_CAB_RECETA(CAB_RECETA entity)
		{
			this.SendPropertyChanging();
			entity.MEDICO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PACIENTE")]
	public partial class PACIENTE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PACI_ID;
		
		private string _PACI_DNI;
		
		private string _PACI_APE_PATERNO;
		
		private string _PACI_APE_MATERNO;
		
		private string _PACI_NOMBRE;
		
		private EntitySet<CAB_RECETA> _CAB_RECETA;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPACI_IDChanging(int value);
    partial void OnPACI_IDChanged();
    partial void OnPACI_DNIChanging(string value);
    partial void OnPACI_DNIChanged();
    partial void OnPACI_APE_PATERNOChanging(string value);
    partial void OnPACI_APE_PATERNOChanged();
    partial void OnPACI_APE_MATERNOChanging(string value);
    partial void OnPACI_APE_MATERNOChanged();
    partial void OnPACI_NOMBREChanging(string value);
    partial void OnPACI_NOMBREChanged();
    #endregion
		
		public PACIENTE()
		{
			this._CAB_RECETA = new EntitySet<CAB_RECETA>(new Action<CAB_RECETA>(this.attach_CAB_RECETA), new Action<CAB_RECETA>(this.detach_CAB_RECETA));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PACI_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PACI_ID
		{
			get
			{
				return this._PACI_ID;
			}
			set
			{
				if ((this._PACI_ID != value))
				{
					this.OnPACI_IDChanging(value);
					this.SendPropertyChanging();
					this._PACI_ID = value;
					this.SendPropertyChanged("PACI_ID");
					this.OnPACI_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PACI_DNI", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string PACI_DNI
		{
			get
			{
				return this._PACI_DNI;
			}
			set
			{
				if ((this._PACI_DNI != value))
				{
					this.OnPACI_DNIChanging(value);
					this.SendPropertyChanging();
					this._PACI_DNI = value;
					this.SendPropertyChanged("PACI_DNI");
					this.OnPACI_DNIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PACI_APE_PATERNO", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PACI_APE_PATERNO
		{
			get
			{
				return this._PACI_APE_PATERNO;
			}
			set
			{
				if ((this._PACI_APE_PATERNO != value))
				{
					this.OnPACI_APE_PATERNOChanging(value);
					this.SendPropertyChanging();
					this._PACI_APE_PATERNO = value;
					this.SendPropertyChanged("PACI_APE_PATERNO");
					this.OnPACI_APE_PATERNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PACI_APE_MATERNO", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PACI_APE_MATERNO
		{
			get
			{
				return this._PACI_APE_MATERNO;
			}
			set
			{
				if ((this._PACI_APE_MATERNO != value))
				{
					this.OnPACI_APE_MATERNOChanging(value);
					this.SendPropertyChanging();
					this._PACI_APE_MATERNO = value;
					this.SendPropertyChanged("PACI_APE_MATERNO");
					this.OnPACI_APE_MATERNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PACI_NOMBRE", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PACI_NOMBRE
		{
			get
			{
				return this._PACI_NOMBRE;
			}
			set
			{
				if ((this._PACI_NOMBRE != value))
				{
					this.OnPACI_NOMBREChanging(value);
					this.SendPropertyChanging();
					this._PACI_NOMBRE = value;
					this.SendPropertyChanged("PACI_NOMBRE");
					this.OnPACI_NOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PACIENTE_CAB_RECETA", Storage="_CAB_RECETA", ThisKey="PACI_ID", OtherKey="PACI_ID")]
		public EntitySet<CAB_RECETA> CAB_RECETA
		{
			get
			{
				return this._CAB_RECETA;
			}
			set
			{
				this._CAB_RECETA.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CAB_RECETA(CAB_RECETA entity)
		{
			this.SendPropertyChanging();
			entity.PACIENTE = this;
		}
		
		private void detach_CAB_RECETA(CAB_RECETA entity)
		{
			this.SendPropertyChanging();
			entity.PACIENTE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PRODUCTO")]
	public partial class PRODUCTO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PROD_ID;
		
		private string _PROD_DESC;
		
		private EntitySet<DET_RECETA> _DET_RECETA;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPROD_IDChanging(int value);
    partial void OnPROD_IDChanged();
    partial void OnPROD_DESCChanging(string value);
    partial void OnPROD_DESCChanged();
    #endregion
		
		public PRODUCTO()
		{
			this._DET_RECETA = new EntitySet<DET_RECETA>(new Action<DET_RECETA>(this.attach_DET_RECETA), new Action<DET_RECETA>(this.detach_DET_RECETA));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROD_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PROD_ID
		{
			get
			{
				return this._PROD_ID;
			}
			set
			{
				if ((this._PROD_ID != value))
				{
					this.OnPROD_IDChanging(value);
					this.SendPropertyChanging();
					this._PROD_ID = value;
					this.SendPropertyChanged("PROD_ID");
					this.OnPROD_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROD_DESC", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PROD_DESC
		{
			get
			{
				return this._PROD_DESC;
			}
			set
			{
				if ((this._PROD_DESC != value))
				{
					this.OnPROD_DESCChanging(value);
					this.SendPropertyChanging();
					this._PROD_DESC = value;
					this.SendPropertyChanged("PROD_DESC");
					this.OnPROD_DESCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCTO_DET_RECETA", Storage="_DET_RECETA", ThisKey="PROD_ID", OtherKey="PROD_ID")]
		public EntitySet<DET_RECETA> DET_RECETA
		{
			get
			{
				return this._DET_RECETA;
			}
			set
			{
				this._DET_RECETA.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DET_RECETA(DET_RECETA entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCTO = this;
		}
		
		private void detach_DET_RECETA(DET_RECETA entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCTO = null;
		}
	}
}
#pragma warning restore 1591
